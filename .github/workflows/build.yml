name: Build Website
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  # https://github.com/withastro/action/blob/main/action.yml  
  build-website:
    runs-on: ubuntu-latest
    steps:
      # 1. Build Astro
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        shell: "bash"
        run: |
          npm install
      - name: Build website
        shell: "bash"
        run: |
          npm run build

      # 2. Build architecture documentation
      - name: Copy docs to /dist
        run: cp -r src/docs dist/
      - name: Generate plantUML diagrams from structurizr
        run: |
          docker run --rm \
          -v "${PWD}":/root/data \
          -w /root/data \
          structurizr/cli:latest \
          export -f plantuml/c4plantuml -w "/root/data/dist/docs/00-diagrams/workspace.dsl"
      - name: Render plantUML diagrams
        run: |
          docker run --rm \
          -v "${PWD}":/root/data \
          -w /root/data \
          plantuml/plantuml -tsvg "dist/docs/00-diagrams/*.puml"
      - name: Convert asciidoc documentation to HTML
        run: |
          docker run --rm \
          -v "${PWD}":/root/data \
          -w /root/data \
          asciidoctor/docker-asciidoctor asciidoctor "dist/docs/documentation.adoc"

      # https://developers.cloudflare.com/pages/how-to/use-direct-upload-with-continuous-integration/
      # 3. Deploy to Cloudflare Pages
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: "personal-website"
          directory: "dist"
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}
